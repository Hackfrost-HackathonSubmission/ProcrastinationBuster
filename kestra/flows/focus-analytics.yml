id: focus-session-analytics
namespace: procrastination-buster

triggers:
  - id: session-trigger
    type: webhook
    conditions:
      - type: datetime
        pattern: "0 0 * * *"  # Daily at midnight

tasks:
  - id: collect-session-data
    type: io.kestra.plugin.elasticsearch.Query
    url: "http://localhost:9200"
    index: "focus_sessions"
    query: |
      {
        "query": {
          "range": {
            "startTime": {
              "gte": "now-1d/d",
              "lt": "now/d"
            }
          }
        }
      }

  - id: analyze-sessions
    type: io.kestra.core.tasks.scripts.Python
    inputFiles:
      session_data: "{{ outputs.collect-session-data.uri }}"
    script: |
      import json
      from datetime import datetime
      
      def analyze_sessions(data):
          sessions = json.loads(data)
          stats = {
              'date': datetime.now().strftime('%Y-%m-%d'),
              'total_sessions': len(sessions),
              'completed_sessions': sum(1 for s in sessions if s['isCompleted']),
              'total_focus_time': sum(s['duration'] for s in sessions),
              'average_session_length': sum(s['duration'] for s in sessions) / len(sessions) if sessions else 0
          }
          return stats
      
      with open('session_data', 'r') as f:
          results = analyze_sessions(f.read())
      
      with open('analysis_results.json', 'w') as f:
          json.dump(results, f)

  - id: send-report
    type: io.kestra.core.tasks.notifications.Email
    from: "noreply@procrastinationbuster.com"
    to: "{{ inputs.admin_email }}"
    subject: "Focus Session Analytics Report - {{ outputs.analyze-sessions.date }}"
    body: |
      Daily Focus Statistics:
      
      Total Sessions: {{ outputs.analyze-sessions.total_sessions }}
      Completed Sessions: {{ outputs.analyze-sessions.completed_sessions }}
      Total Focus Time: {{ outputs.analyze-sessions.total_focus_time }} minutes
      Average Session Length: {{ outputs.analyze-sessions.average_session_length }} minutes